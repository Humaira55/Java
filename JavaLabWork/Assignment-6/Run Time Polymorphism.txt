Q.5) 

class Car{
	void run()
	{
		System.out.println("Running..");
	}
}

class Audi extends Car
{
	void run()
	{
		System.out.println("Audi is Running..");
	}
}

public class RunTimePolymorphism {

	public static void main(String[] args) {
		
		Car c = new Audi();
		c.run();
	}

}

In this example, we are creating two classes Car and Audi. Audi class extends Car class and overrides its run() method. We are calling the run method by the reference variable of Parent class. Since it refers to the subclass object and subclass method overrides the Parent class method, the subclass method is invoked at runtime.

Since method invocation is determined by the JVM not compiler, it is known as runtime polymorphism.
